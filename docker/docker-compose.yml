version: '3.5'

services:

  postgres:
    container_name: open-connect-db
    image: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 60s
      interval: 10s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
      - ./postgres:/data/postgres
      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  keycloak:
    container_name: open-connect-keycloak
    image: quay.io/keycloak/keycloak:20.0.2
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KEYCLOAK_USER: ${KEYCLOAK_USER:-admin}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD:-admin}
    command: start-dev
    ports:
      - '8090:8080'
    depends_on:
      - postgres

  sonarqube:
    container_name: open-connect-sonarqube
    image: sonarqube:8.9-community
    depends_on:
      - postgres
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar_teste
      SONAR_JDBC_USERNAME: ${POSTGRES_USER:-postgres}
      SONAR_JDBC_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - SonarQube_data:/opt/SonarQube/data
      - SonarQube_extensions:/opt/SonarQube/extensions
      - SonarQube_logs:/opt/SonarQube/logs
    ports:
      - "9000:9000"
    networks:
      - postgres
    restart: unless-stopped

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  SonarQube_data:
  SonarQube_extensions:
  SonarQube_logs:
